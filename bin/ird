#!/usr/bin/ruby

$:.unshift File.join(File.dirname(__FILE__), '..', 'lib') # Put our local lib in first place

require 'rubygems' unless defined?(Gem)

# SEE: http://github.com/rubyspec/matzruby/blob/a34130eb7c4ecc164115a59aa1b76c643bd98202/lib/irb/xmp.rb
# SEE: http://github.com/blackwinter/wirble/tree/master
require "irb"
require 'irb/completion'

require 'rudy'
require 'drydock'
require 'rudy/cli'

include Readline
include Drydock

global :A, :accesskey, String, "AWS Access Key"
global :S, :secretkey, String, "AWS Secret Access Key"
#global :R, :region, String, "Connect to a specific EC2 region (ie: #{Rudy::DEFAULT_REGION})"
global :n, :nocolor, "Disable output colors"
global :f, :config, String, "Specify another configuration file to read (ie: #{Rudy::RUDY_CONFIG_FILE})"
global :z, :zone, String, "Connect to a specific EC2 zone (ie: #{Rudy::DEFAULT_ZONE})"
global :e, :environment, String, "Connect to the specified environment (ie: #{Rudy::DEFAULT_ENVIRONMENT})"
global :r, :role, String, "Connect to a machine with the specified role (ie: #{Rudy::DEFAULT_ROLE})"
global :p, :position, String, "Position in the machine in its group (ie: #{Rudy::DEFAULT_POSITION})"
global :u, :user, String, "Provide a username (ie: #{Rudy::DEFAULT_USER})"
global :q, :quiet, "Run with less output"
global :v, :verbose, "Increase verbosity of output (i.e. -v or -vv or -vvv)" do
  @verbose ||= 0
  @verbose += 1
end
global :V, :version, "Display version number" do
  puts "Rudy version: #{Rudy::VERSION}"
  exit 0
end


default :interactive
debug :on
desc "An interactive REPL for Rudy."
usage "#{$0} [global options]"
command :interactive do |obj|
  
  @rmach = Rudy::Instances.new(:global => obj.global)
  @rkey = Rudy::KeyPairs.new(:global => obj.global)
  @rgrp = Rudy::Groups.new(:global => obj.global)
  @rvol = Rudy::Volumes.new(:global => obj.global)
  @radd = Rudy::Addresses.new(:global => obj.global)
  
  puts Rudy::CLI.generate_header(@rmach.global, @rmach.config)
  puts Rudy::Utils.without_indent(%Q`
  ------------------------------------------------------------
  Welcome Interactive Rudy! (EXPERIMENTAL)
  ------------------------------------------------------------
  
  Quick Start:
  `)
  h
  
  # What's the deal with this error message when defining a help method?
  # => rb: warn: can't alias help from irb_help
  if __FILE__ == $0
    IRB.start(__FILE__)
  else
    # check -e option
    if /^-e$/ =~ $0
      IRB.start(__FILE__)
    else
      IRB.start(__FILE__)
    end
  end
  
end

def h;
  puts (%Q`
  h           Help (this screen)
  m           Rudy::Machines instance
  g           Rudy::Groups instance
  k           Rudy::KeyPairs instance
  v           Rudy::Volumes instance
  a           Rudy::Addresses instance
  
  i.e. 
    # List Amazon KeyPairs
    >> k.list
    => [#<Rudy::AWS::EC2::KeyPair:0x18c5888 ...>]
    
    # Create a machine instance in the current machine group (i.e. stage-app)
    >> m.create
    => ........
  `)
end
def m; @rmach; end
def k; @rkey; end
def g; @rgrp;   end
def v; @rvol;  end
def a; @radd; end


__END__
#@rbox = Rye::Box.new('ec2-174-129-173-3.compute-1.amazonaws.com', 'root')
#@rbox2 = Rye::Box.new('ec2-174-129-173-3.compute-1.amazonaws.com', 'root')
#@rbox.add_keys('/Users/delano/Projects/git/rudy/.rudy/key-test-app.private')
