# = Rudy
# 
# This is an example Rudy configuration.
#
# Rudy automatically looks for configuration files in the 
# following locations (in this order):
#
#     ./.rudy/config
#     ~/.rudy/config
#
#     ./Rudyfile
#     ./config/rudy/*.rb
#     ./.rudy/*.rb
#     /etc/rudy/*.rb
#
# When multuple files are found, the configuration is 
# NOT OVERRIDDEN. It's ADDED / APPENDED. This means you can 
# split configuration across many files as you please. 
#
# There are four sections: accounts, defaults, machines, commands and routines.
# 
# By convention, accounts and defaults go in ~/.rudy/config or ./.rudy/config 
# machines, commands and routines configuration go in ./Rudyfile or into 
# separate files in ./.rudy or ./config/rudy (machines.rb, commands.rb, ...)
#

# ---------------------------------------------------------  MACHINES  --------
# The machines block describes the "physical" characteristics
# of your environments. 
machines do
  
  zone :"us-east-1b" do
    ami 'ami-235fba4a'               # Amazon Getting Started AMI (US)
  end
  zone :"eu-west-1b" do
    ami 'ami-e40f2790'               # Amazon Getting Started AMI (EU)
  end
  
  hostname :rudy                     # One of: :default, :rudy, "a value"
  
  # We've defined an environment called "stage" with one role: "app". 
  # The configuration inside the env block is available to all its 
  # roles. The configuration inside the role blocks is available only
  # to machines in that specific role. 
  env :stage do
    ami "ami-e348af8a"               # Debian 5.0, 32-bit (Alestic)
    size 'm1.small'                  # EC2 machine type for all machines
                                     # in the "stage" environment
    role :app do
      positions 1                    # Only 1 machine in stage-app
      #addresses '11.22.33.44'       # Define an elastic IP to reuse
      
      disks do                       # Define EBS volumes 
        path "/rudy/disk1" do        # The paths can be anything but
          size 2                     # they must be unique. 
          device "/dev/sdr"          # Devices must be unique too.
        end
      end
    end
    
    role :db do                      # You can define as many roles
    end                              # as you like. These are just 
    role :balancer do                # a couple examples.
    end
    
    users do                         # Specify existing private keys 
      #root do                       # (optional)                        
      #  keypair "/path/2/private-key"
      #end
    end
    
  end  

  # The routines section below contains calls to local and remote
  # scripts. The config contained in this block is made available
  # those scripts in the form of a yaml file. The file is called
  # rudy-config.yml. 
  config do                 
    dbmaster 'localhost'
    newparam 573114
  end
end


# ----------------------------------------------------------- COMMANDS --------
# The commands block defines shell commands to be allowed or denied from the 
# default list defined by Rye::Cmd (Rudy executes all SSH commands via Rye).
# Commands can have any name except for keywords already used by Rudy. 
commands do
  allow :gem_install, "/usr/bin/gem", "install", :V, "--no-rdoc", "--no-ri"
  allow :apt_get, "/usr/bin/apt-get", :y, :q
  deny :kill
end


# ----------------------------------------------------------- ROUTINES --------
# The routines block describes the repeatable processes for each machine group.
# To run a routine, specify its name on the command-line: rudy startup
routines do
  
  env :stage do                      # We'll define routines for the
    role :app do                     # stage-app machine group
                                     
      startup do                     # $ rudy startup
        adduser :rudy                # Create a user called "rudy"
        authorize :rudy              # Enable passwordless logins as rudy
                                     
        disks do                     # Define EBS volume routines
          create "/rudy/disk1"       # Create an EBS volume, attach it, give
        end                          # it a filesystem, and mount it.
                                     
        after :rudy do               # Run remote SSH commands after startup
          mkdir :p, "great"          # $ mkdir -p great
          touch "great/scott"        # $ touch great/scott
          ls :l, :a                  # $ ls -l -a
        end                          
      end                            
                                     
      shutdown do                    # $ rudy shutdown
        before :root do              # Run remote SSH commands before shutdown
          mysqld_initd               
        end                          
                                     
        disks do                     
          destroy "/rudy/disk1"      # Unmount and destroy the EBS volume
        end                          
      end                            
                                     
    end                              
  end                                
  
  # Define global routines available
  # to every environment and role.
  sysupdate do                       # $ rudy sysupdate
    before :root do                  
      apt_get "update"               
      apt_get "install", "apache2-prefork-dev", "libapr1-dev"
      apt_get "install", "build-essential", "sqlite3", "libsqlite3-dev"
      gem_install 'rudy'
    end
  end
  
  nothing do
  end
end

