= Rudy - v0.9-RC1

<b>Not your grandparents' EC2 deployment tool.</b>

Rudy is a development and deployment tool for Amazon Web Services. It helps you build and infrastructures in EC2 by organizing them into groups of _zones_,  _environments_, and _roles_. You can run multiple machines with the same role. When you put all this together, you have a unique name for every machine. The default machine is called <tt>m-us-east-1b-stage-app-01</tt> but you can also give them custom names. 

All configuration is organized into the zones, environments, and roles that you specify (Rudy assumes positions are identical which is important for backups and scaling). And as you'd expect, the defaults can be changed too.

<b>See Getting-Started[http://solutious.com/projects/rudy/getting-started/] for more info.</b>


== Project Status

<em>This is a BETA release. That means Rudy's not ready for production use! See Project-Status[http://wiki.github.com/solutious/rudy/project-status].</em>

The 0.9 release is a major re-write and has many changes from previous releases. 0.9-RC1 is the first public release from the 0.9 branch and much of the code has not been tested. DO NOT USE IN PRODUCTION. Try it out have some fun and if you have the time send a patch or pull request!


== Configuration

=== Machines

The machines configuration describes the "physical" characteristics of your infrastructure. 

    env :stage do                   # Define an environment
      ami 'ami-e348af8a'         
                             
      role :app do                  # Define a role
        addresses '11.22.33.44'     # Use elastic IPs
                             
        disks do                    # Define EBS volumes
          path "/rudy/disk1" do  
            size 100             
            device "/dev/sdr"     
          end                       
        end
      end
    end

=== Routines

The routines configuration describes repeatable processes that you can execute on your machines. 

    startup do                      # $ rudy startup
      adduser :rudy       
      authorize :rudy               # Enable passwordless login
                             
      disks do                   
        create "/rudy/disk1"        # Create a disk 
      end                       
                            
      remote :rudy do               # Run remote commands via SSH
        mkdir :p, "great"           # $ mkdir -p great
        touch "great/scott"         # $ touch great/scott
        mysql_init :start 
      end                          
    end



== Features

* Create complex IT infrastructures from a simple configuration
  * Launch multiple instances 
  * Assign elastic IP addresses
  * Create EBS volumes, attach to instances, format, and mount
* Run SSH commands on machine groups in parallel
* Organize instances into environments and roles
* Powerful command-line tools
  * <tt>$ rudy -u root ssh</tt>
  * <tt>$ rudy -e testing -r database backup-mysql</tt>
* Use _any Linux_ Amazon machine image (AMI) (partial Solaris support)
* Complete command-line interface for EC2. See <tt>bin/rudy-ec2</tt>.

== Installation

Via Rubygems, one of:

    $ sudo gem install rudy
    $ sudo gem install solutious-rudy --source http://gems.github.com/

or via download:
* rudy-latest.tar.gz[http://github.com/solutious/rudy/tarball/latest]
* rudy-latest.zip[http://github.com/solutious/rudy/zipball/latest]

NOTE: <em>If you are not installing via RubyGems, you need to make sure the dependencies are in your LOAD_PATH (<tt>$:</tt>). Ryan Tomayko wrote a gist[http://gist.github.com/54177] about it.</em>

<b>See Getting-Started[http://solutious.com/projects/rudy/getting-started/] for more info.</b>


== Pre-Requisites

* Amazon AWS[http://aws.amazon.com/] Account
  * EC2[http://aws.amazon.com/ec2/]
  * SimpleDB[http://aws.amazon.com/simpledb/]
  * S3[http://aws.amazon.com/s3/]
* OpenSSL[http://www.openssl.org/]
* OpenSSH[http://www.openssh.com/]
* Ruby[http://ruby-lang.org] 1.8.x, 1.9.x, or JRuby[http://jruby.codehaus.org] 1.3
  * Net::SSH[http://net-ssh.rubyforge.org/]
  * Net::SCP[http://net-ssh.rubyforge.org/]
  * amazon-ec2[http://github.com/grempe/amazon-ec2]
  * aws-s3[http://github.com/marcel/aws-s3]
  * Rye[http://github.com/delano/rye]
  * Drydock[http://github.com/delano/drydock]
  * Caesars[http://github.com/delano/caesars]
  * Gibbler[http://github.com/delano/gibbler]


== More Info

* Fork at GitHub[http://github.com/solutious/rudy]
* Read the Documentation[http://wiki.github.com/solutious/rudy]
* Submit issues to the IssueTracker[http://github.com/solutious/rudy/issues]
* Start a discussion on the GoogleGroup[http://groups.google.com/group/rudy-deployment]
* Find some Inspiration[http://www.youtube.com/watch?v=CgaiIW5Rzes]
* For all other inquires, email me directly: delano (@solutious.com)


== Thanks

* The Rilli.com[http://rilli.com] team
  * Adam Bognar
  * Andrew Simpson
  * Caleb Buxton
  * Colin Brumelle
* Sam Aaron
* Everyone at Utrecht.rb[http://groups.google.com/group/utrecht-rb]
* Steve Abatangle
* Mathias Monnerville	
* Jamis Buck for Net::SSH and friends
* Glenn Rempe for amazon-ec2
* Marcel Molina Jr. for aws-s3
* Keshia Knight Pulliam


== Contributions

* For bigger features please fork the git repo and send me a pull request. 
* For small or single file changes, send me an email with the details: Delano (@solutious.com)


== Credits

* Delano Mandelbaum (delano@solutious.com)
* Rudy::AWS::SDB adapted from aws_sdb by Tim Dysinger (http://dysinger.net)


== Related Projects

* Sprinkle -- http://github.com/crafterm/sprinkle/
* Wakame -- http://wakame.rubyforge.org/
* Pool Party -- http://www.poolpartyrb.com/
* Rubber -- http://github.com/wr0ngway/rubber/wikis
* Moonshine -- http://github.com/railsmachine/moonshine/tree
* Boto -- http://code.google.com/p/boto/
* Fabric -- http://www.nongnu.org/fab/



== License

See: LICENSE.txt
